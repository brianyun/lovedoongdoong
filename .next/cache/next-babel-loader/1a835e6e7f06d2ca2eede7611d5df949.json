{"ast":null,"code":"var _jsxFileName = \"/Users/hsyun/programming/web/mini_project/firebase-MBTI/pages/dog.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Carousel } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport Question from \"../components/Question\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\n\nconst Dog = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const carouselRef = useRef();\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const maxCount = list.arr.length;\n  const {\n    0: answerArr,\n    1: setAnswerArr\n  } = useState([]);\n\n  function handler(ans, id) {\n    if (count !== id) {\n      setAnswerArr(prevArr => [...prevArr, ans]);\n\n      if (id === maxCount) {\n        router.push(\"/\");\n        return;\n      }\n\n      carouselRef.current.next();\n      setCount(id);\n    } else {\n      return;\n    }\n  }\n\n  useEffect(() => {\n    if (answerArr.length === maxCount + 1) {\n      console.log(\"AnswerArr is: \" + answerArr); // dispatch({\n      // \ttype: ADD_ANSWER,\n      // \tdata: answerArr,\n      // });\n    }\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, __jsx(Carousel, {\n    dotPosition: \"left\",\n    dots: \"false\",\n    ref: carouselRef,\n    effect: \"fade\",\n    style: {\n      marginTop: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, __jsx(Question, {\n    index: 1,\n    handler: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), __jsx(Question, {\n    index: 2,\n    handler: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), __jsx(Question, {\n    index: 3,\n    handler: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), __jsx(Question, {\n    index: 4,\n    handler: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), __jsx(Question, {\n    index: 5,\n    handler: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), __jsx(Question, {\n    index: 6,\n    handler: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), __jsx(Question, {\n    index: 7,\n    handler: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  })), __jsx(ProgressBar, {\n    i: count,\n    length: maxCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Dog;","map":{"version":3,"sources":["/Users/hsyun/programming/web/mini_project/firebase-MBTI/pages/dog.js"],"names":["React","useRef","useEffect","useState","Carousel","useRouter","useDispatch","ADD_ANSWER","Question","ProgressBar","list","Dog","router","dispatch","carouselRef","count","setCount","maxCount","arr","length","answerArr","setAnswerArr","handler","ans","id","prevArr","push","current","next","console","log","marginTop"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { Carousel } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport Question from \"../components/Question\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\n\nconst Dog = () => {\n\tconst router = useRouter();\n\tconst dispatch = useDispatch();\n\n\tconst carouselRef = useRef();\n\n\tconst [count, setCount] = useState(0);\n\tconst maxCount = list.arr.length;\n\tconst [answerArr, setAnswerArr] = useState([]);\n\n\tfunction handler(ans, id) {\n\t\tif (count !== id) {\n\t\t\tsetAnswerArr((prevArr) => [...prevArr, ans]);\n\n\t\t\tif (id === maxCount) {\n\t\t\t\trouter.push(\"/\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcarouselRef.current.next();\n\t\t\tsetCount(id);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (answerArr.length === maxCount + 1) {\n\t\t\tconsole.log(\"AnswerArr is: \" + answerArr);\n\t\t\t// dispatch({\n\t\t\t// \ttype: ADD_ANSWER,\n\t\t\t// \tdata: answerArr,\n\t\t\t// });\n\t\t}\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<Carousel\n\t\t\t\tdotPosition=\"left\"\n\t\t\t\tdots=\"false\"\n\t\t\t\tref={carouselRef}\n\t\t\t\teffect=\"fade\"\n\t\t\t\tstyle={{ marginTop: \"100px\" }}\n\t\t\t>\n\t\t\t\t<Question index={1} handler={handler} />\n\t\t\t\t<Question index={2} handler={handler} />\n\t\t\t\t<Question index={3} handler={handler} />\n\t\t\t\t<Question index={4} handler={handler} />\n\t\t\t\t<Question index={5} handler={handler} />\n\t\t\t\t<Question index={6} handler={handler} />\n\t\t\t\t<Question index={7} handler={handler} />\n\t\t\t</Carousel>\n\n\t\t\t<ProgressBar i={count} length={maxCount} />\n\t\t</div>\n\t);\n};\n\nexport default Dog;\n"]},"metadata":{},"sourceType":"module"}