{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Carousel } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport Question from \"../components/Question\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\n\nconst Test = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const carouselRef = useRef();\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const maxCount = list.arr.length;\n  const {\n    0: answerArr,\n    1: setAnswerArr\n  } = useState([]);\n\n  function handler(ans, id) {\n    if (count !== id) {\n      setAnswerArr(prevArr => [...prevArr, ans]);\n\n      if (id === maxCount) {\n        router.push(\"/loading\");\n        return;\n      }\n\n      carouselRef.current.next();\n      setCount(id);\n    } else {\n      return;\n    }\n  }\n\n  useEffect(() => {\n    if (answerArr.length === maxCount) {\n      console.log(\"AnswerArr is: \" + answerArr);\n      dispatch({\n        type: ADD_ANSWER,\n        data: answerArr\n      });\n    }\n  });\n  return __jsx(\"div\", null, __jsx(Carousel, {\n    dotPosition: \"left\",\n    dots: \"false\",\n    ref: carouselRef,\n    effect: \"fade\",\n    style: {\n      marginTop: \"100px\",\n      height: \"100%\"\n    }\n  }, __jsx(Question, {\n    index: 1,\n    handler: handler\n  }), __jsx(Question, {\n    index: 2,\n    handler: handler\n  }), __jsx(Question, {\n    index: 3,\n    handler: handler\n  }), __jsx(Question, {\n    index: 4,\n    handler: handler\n  }), __jsx(Question, {\n    index: 5,\n    handler: handler\n  }), __jsx(Question, {\n    index: 6,\n    handler: handler\n  }), __jsx(Question, {\n    index: 7,\n    handler: handler\n  })), __jsx(ProgressBar, {\n    i: count,\n    length: maxCount\n  }));\n};\n\nexport default Test;","map":null,"metadata":{},"sourceType":"module"}