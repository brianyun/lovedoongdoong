{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/hsyun/programming/web/mini_project/firebase-MBTI/pages/test2.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport Slider from \"react-slick\";\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport Question2 from \"../components/Question2\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\n\nvar Test = function Test() {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var maxCount = list.arr.length;\n\n  var _useState2 = useState([]),\n      answerArr = _useState2[0],\n      setAnswerArr = _useState2[1];\n\n  var indexArr = [1, 2, 3, 4, 5, 6, 7];\n  var slickRef = useRef(); // const handler = (ans) => {\n  // \tconsole.log(\"pre count = \", count);\n  // \tif (count === maxCount - 1) {\n  // \t\trouter.push(\"/\");\n  // \t\treturn;\n  // \t}\n  // \tslickRef.current.slickNext();\n  // \tsetCount(count + 1);\n  // \tconsole.log(\"post count = \", count);\n  // };\n  // useEffect(() => {\n  // \tif (answerArr.length === maxCount) {\n  // \t\tconsole.log(\"AnswerArr is: \" + answerArr);\n  // \t\tdispatch({\n  // \t\t\ttype: ADD_ANSWER,\n  // \t\t\tdata: answerArr,\n  // \t\t});\n  // \t}\n  // });\n\n  var _useState3 = useState(1),\n      index = _useState3[0],\n      setIndex = _useState3[1];\n\n  var handler = function handler(ans) {\n    setIndex(index + 1);\n    console.log(\"post count = \", count);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, __jsx(Question2, {\n    index: index,\n    handler: handler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  })), __jsx(ProgressBar, {\n    i: count,\n    length: maxCount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }));\n};\n\n_s(Test, \"iCYKB9aHqx/c+AXH+0qcpCcmKXg=\", false, function () {\n  return [useRouter, useDispatch];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/hsyun/programming/web/mini_project/firebase-MBTI/pages/test2.js"],"names":["React","useRef","useEffect","useState","useRouter","useDispatch","Slider","ADD_ANSWER","Question2","ProgressBar","list","Test","router","dispatch","count","setCount","maxCount","arr","length","answerArr","setAnswerArr","indexArr","slickRef","index","setIndex","handler","ans","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAMS,QAAQ,GAAGR,WAAW,EAA5B;;AAFkB,kBAIQF,QAAQ,CAAC,CAAD,CAJhB;AAAA,MAIXW,KAJW;AAAA,MAIJC,QAJI;;AAKlB,MAAMC,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAASC,MAA1B;;AALkB,mBAMgBf,QAAQ,CAAC,EAAD,CANxB;AAAA,MAMXgB,SANW;AAAA,MAMAC,YANA;;AAQlB,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjB;AACA,MAAMC,QAAQ,GAAGrB,MAAM,EAAvB,CATkB,CAWlB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhCkB,mBAkCQE,QAAQ,CAAC,CAAD,CAlChB;AAAA,MAkCXoB,KAlCW;AAAA,MAkCJC,QAlCI;;AAoClB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AACxBF,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bd,KAA7B;AACA,GAHD;;AAKA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD;AAAW,IAAA,KAAK,EAAES,KAAlB;AAAyB,IAAA,OAAO,EAAEE,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAtBD,EA0BC,MAAC,WAAD;AAAa,IAAA,CAAC,EAAEX,KAAhB;AAAuB,IAAA,MAAM,EAAEE,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BD,CADD;AA8BA,CAvED;;GAAML,I;UACUP,S,EACEC,W;;;KAFZM,I;AAyEN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport Slider from \"react-slick\";\n\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport Question2 from \"../components/Question2\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\n\nconst Test = () => {\n\tconst router = useRouter();\n\tconst dispatch = useDispatch();\n\n\tconst [count, setCount] = useState(0);\n\tconst maxCount = list.arr.length;\n\tconst [answerArr, setAnswerArr] = useState([]);\n\n\tconst indexArr = [1, 2, 3, 4, 5, 6, 7];\n\tconst slickRef = useRef();\n\n\t// const handler = (ans) => {\n\t// \tconsole.log(\"pre count = \", count);\n\n\t// \tif (count === maxCount - 1) {\n\t// \t\trouter.push(\"/\");\n\t// \t\treturn;\n\t// \t}\n\n\t// \tslickRef.current.slickNext();\n\t// \tsetCount(count + 1);\n\t// \tconsole.log(\"post count = \", count);\n\t// };\n\n\t// useEffect(() => {\n\t// \tif (answerArr.length === maxCount) {\n\t// \t\tconsole.log(\"AnswerArr is: \" + answerArr);\n\t// \t\tdispatch({\n\t// \t\t\ttype: ADD_ANSWER,\n\t// \t\t\tdata: answerArr,\n\t// \t\t});\n\t// \t}\n\t// });\n\n\tconst [index, setIndex] = useState(1);\n\n\tconst handler = (ans) => {\n\t\tsetIndex(index + 1);\n\t\tconsole.log(\"post count = \", count);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* <Slider\n\t\t\t\tinfinite={false}\n\t\t\t\tswipe={false}\n\t\t\t\tdraggable={false}\n\t\t\t\tstyle={{ marginTop: \"100px\" }}\n\t\t\t\tref={slickRef}\n\t\t\t\tfade={true}\n\t\t\t>\n\t\t\t\t{indexArr.map((ind) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Question2\n\t\t\t\t\t\t\t\tindex={ind}\n\t\t\t\t\t\t\t\thandler={handler}\n\t\t\t\t\t\t\t\tkey={ind}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Slider> */}\n\n\t\t\t<div>\n\t\t\t\t<Question2 index={index} handler={handler} />\n\t\t\t</div>\n\n\t\t\t<ProgressBar i={count} length={maxCount} />\n\t\t</div>\n\t);\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}