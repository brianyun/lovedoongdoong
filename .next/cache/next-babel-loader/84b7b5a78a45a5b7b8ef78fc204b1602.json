{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Col } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport storage from \"../back/cloudStorage\";\nimport { ADD_URL } from \"../reducers/answer\";\nimport { MAKE_DIRECT_TRUE } from \"../reducers/answer\";\nimport { CLEAR_URLS } from \"../reducers/answer\";\nimport { RowsContainer, GoodBadContainer, WidthImg, Texty, Paragraphy, LineBreakText, GoodBadBtn } from \"../assets/css/style_result\";\nimport { Container, containerCol } from \"../assets/css/style_global\";\nimport result from \"../assets/result.json\";\nimport Footer from \"./Footer\";\nimport ShareGroup from \"./ShareGroup\";\nimport icons from \"../back/icon_result\";\n\nvar Result = function Result(_ref) {\n  var name = _ref.name;\n  var v = result[name];\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.answer;\n  }),\n      url = _useSelector.url;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.answer;\n  }),\n      isDirect = _useSelector2.isDirect;\n\n  var _useState = useState(null),\n      thumbUrl = _useState[0],\n      setThumbUrl = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      goodTitle = _useState2[0],\n      setGoodTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      goodId = _useState3[0],\n      setGoodId = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      badTitle = _useState4[0],\n      setBadTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      badId = _useState5[0],\n      setBadId = _useState5[1];\n\n  useEffect(function () {\n    setThumbUrl(url[\"thumbUrl\"]);\n    setGoodTitle(result[v[\"good\"]][\"title\"]);\n    setGoodId(result[v[\"good\"]][\"id\"]);\n    setBadTitle(result[v[\"bad\"]][\"title\"]);\n    setBadId(result[v[\"bad\"]][\"id\"]);\n  }, [url]);\n  useEffect(function () {\n    dispatch({\n      type: CLEAR_URLS\n    });\n\n    if (isDirect && !thumbUrl) {\n      console.log(\"[isDirect]\");\n      storage.ref().child(v[\"thumbnail\"]).getDownloadURL().then(function (url) {\n        setThumbUrl(url);\n      })[\"catch\"](function (err) {\n        return;\n      });\n    } else {\n      dispatch({\n        type: MAKE_DIRECT_TRUE\n      });\n    }\n  }, [isDirect]);\n  useEffect(function () {\n    if (isDirect && thumbUrl) {\n      dispatch({\n        type: ADD_URL,\n        data: {\n          thumbUrl: thumbUrl\n        }\n      });\n    }\n  }, [thumbUrl]);\n\n  var toGoodBad = function toGoodBad(id) {\n    if (id === \"\") {\n      return;\n    }\n\n    router.push(\"/result/\".concat(id));\n    dispatch({\n      type: CLEAR_URLS\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    top: -1\n  }, __jsx(Col, containerCol, __jsx(WidthImg, {\n    src: require(\"../assets/images/result/header.png\")\n  }), __jsx(Texty, {\n    strong: true,\n    top: 10,\n    font: 30\n  }, v[\"title_1\"]), __jsx(Texty, {\n    strong: true,\n    top: -1,\n    font: 30\n  }, v[\"title_2\"]), __jsx(WidthImg, {\n    src: icons[v[\"id\"]]\n  }), __jsx(Texty, {\n    strong: true,\n    top: 10,\n    font: 20\n  }, v[\"subtitle\"]), __jsx(Paragraphy, {\n    top: 10,\n    font: 15\n  }, v[\"description\"]), __jsx(WidthImg, {\n    src: require(\"../assets/images/result/line_horizontal.png\"),\n    style: {\n      marginTop: \"20px\",\n      marginBottom: \"20px\"\n    }\n  }), __jsx(RowsContainer, null, __jsx(GoodBadContainer, null, __jsx(Texty, {\n    font: 15,\n    strong: true\n  }, \"\\uC798 \\uB9DE\\uB294 \\uCE5C\\uAD6C\"), __jsx(GoodBadBtn, {\n    onClick: function onClick() {\n      return toGoodBad(goodId);\n    }\n  }, __jsx(LineBreakText, {\n    font: 15\n  }, goodTitle), __jsx(WidthImg, {\n    src: icons[goodId]\n  }))), __jsx(GoodBadContainer, {\n    width: 4\n  }, __jsx(\"img\", {\n    src: require(\"../assets/images/result/line_vertical.png\"),\n    style: {\n      height: \"200px\"\n    }\n  })), __jsx(GoodBadContainer, null, __jsx(Texty, {\n    font: 15,\n    strong: true\n  }, \"\\uC5B4\\uC0C9\\uD55C \\uCE5C\\uAD6C\"), __jsx(GoodBadBtn, {\n    onClick: function onClick() {\n      return toGoodBad(badId);\n    }\n  }, __jsx(LineBreakText, {\n    font: 15\n  }, badTitle), __jsx(WidthImg, {\n    src: icons[badId]\n  })))), __jsx(\"div\", {\n    style: {\n      height: \"20px\"\n    }\n  }), __jsx(ShareGroup, {\n    title: v[\"title\"] ? v[\"title\"] : \"\",\n    thumbUrl: thumbUrl ? thumbUrl : \"\"\n  }), __jsx(\"div\", {\n    style: {\n      height: \"50px\"\n    }\n  }), __jsx(Footer, null))));\n};\n\nexport default Result;","map":null,"metadata":{},"sourceType":"module"}