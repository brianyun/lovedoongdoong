{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hsyun/code/web/full_project/firebase-MBTI/pages/test.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport { CLEAR_URLS } from \"../reducers/answer\";\nimport Question from \"../components/Question\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\nimport { OptionBtn, SelectBtn, Container, containerCol, optionCol, halfCol } from \"../assets/css/style_test\";\nimport { Col } from \"antd\";\n\nvar Test = function Test() {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var maxCount = list.arr.length;\n\n  var _useState = useState([]),\n      answerArr = _useState[0],\n      setAnswerArr = _useState[1];\n\n  var _useState2 = useState(1),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var handler = function handler(ans) {\n    setAnswerArr(function (prevArr) {\n      return [].concat(_toConsumableArray(prevArr), [ans]);\n    });\n\n    if (index === 10) {\n      ans === 1 ? setIndex(11) : setIndex(12);\n    } else if (index === 11) {\n      setIndex(13);\n    } else {\n      if (index === maxCount) {\n        router.push(\"/loading\");\n        return;\n      }\n\n      setIndex(index + 1);\n    }\n  };\n\n  useEffect(function () {\n    if (answerArr.length === maxCount) {\n      //console.log(\"AnswerArr is: \" + answerArr);\n      dispatch({\n        type: CLEAR_URLS\n      });\n      dispatch({\n        type: ADD_ANSWER,\n        data: answerArr\n      });\n    }\n  });\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, __jsx(Col, _extends({}, containerCol, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }), __jsx(Question, {\n    index: index,\n    handler: handler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), __jsx(ProgressBar, {\n    i: list.arr[index - 1].progress,\n    length: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  })));\n};\n\n_s(Test, \"6MIdnDfUhO5Y+/euLus9/n47x9A=\", false, function () {\n  return [useRouter, useDispatch];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/hsyun/code/web/full_project/firebase-MBTI/pages/test.js"],"names":["React","useEffect","useState","useRouter","useDispatch","ADD_ANSWER","CLEAR_URLS","Question","ProgressBar","list","OptionBtn","SelectBtn","Container","containerCol","optionCol","halfCol","Col","Test","router","dispatch","maxCount","arr","length","answerArr","setAnswerArr","index","setIndex","handler","ans","prevArr","push","type","data","progress"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA,SACCC,SADD,EAECC,SAFD,EAGCC,SAHD,EAICC,YAJD,EAKCC,SALD,EAMCC,OAND,QAOO,0BAPP;AAQA,SAASC,GAAT,QAAoB,MAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAGf,SAAS,EAAxB;AACA,MAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AAEA,MAAMgB,QAAQ,GAAGX,IAAI,CAACY,GAAL,CAASC,MAA1B;;AAJkB,kBAKgBpB,QAAQ,CAAC,EAAD,CALxB;AAAA,MAKXqB,SALW;AAAA,MAKAC,YALA;;AAAA,mBAMQtB,QAAQ,CAAC,CAAD,CANhB;AAAA,MAMXuB,KANW;AAAA,MAMJC,QANI;;AAQlB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AACxBJ,IAAAA,YAAY,CAAC,UAACK,OAAD;AAAA,0CAAiBA,OAAjB,IAA0BD,GAA1B;AAAA,KAAD,CAAZ;;AAEA,QAAIH,KAAK,KAAK,EAAd,EAAkB;AACjBG,MAAAA,GAAG,KAAK,CAAR,GAAYF,QAAQ,CAAC,EAAD,CAApB,GAA2BA,QAAQ,CAAC,EAAD,CAAnC;AACA,KAFD,MAEO,IAAID,KAAK,KAAK,EAAd,EAAkB;AACxBC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,KAFM,MAEA;AACN,UAAID,KAAK,KAAKL,QAAd,EAAwB;AACvBF,QAAAA,MAAM,CAACY,IAAP,CAAY,UAAZ;AACA;AACA;;AACDJ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA;AACD,GAdD;;AAgBAxB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIsB,SAAS,CAACD,MAAV,KAAqBF,QAAzB,EAAmC;AAClC;AACAD,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAEzB;AAAR,OAAD,CAAR;AACAa,MAAAA,QAAQ,CAAC;AACRY,QAAAA,IAAI,EAAE1B,UADE;AAER2B,QAAAA,IAAI,EAAET;AAFE,OAAD,CAAR;AAIA;AACD,GATQ,CAAT;AAWA,SACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,GAAD,eAASV,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACC,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEY,KAAjB;AAAwB,IAAA,OAAO,EAAEE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,WAAD;AAAa,IAAA,CAAC,EAAElB,IAAI,CAACY,GAAL,CAASI,KAAK,GAAG,CAAjB,EAAoBQ,QAApC;AAA8C,IAAA,MAAM,EAAE,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,CADD;AAQA,CA3CD;;GAAMhB,I;UACUd,S,EACEC,W;;;KAFZa,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport { CLEAR_URLS } from \"../reducers/answer\";\nimport Question from \"../components/Question\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\n\nimport {\n\tOptionBtn,\n\tSelectBtn,\n\tContainer,\n\tcontainerCol,\n\toptionCol,\n\thalfCol,\n} from \"../assets/css/style_test\";\nimport { Col } from \"antd\";\n\nconst Test = () => {\n\tconst router = useRouter();\n\tconst dispatch = useDispatch();\n\n\tconst maxCount = list.arr.length;\n\tconst [answerArr, setAnswerArr] = useState([]);\n\tconst [index, setIndex] = useState(1);\n\n\tconst handler = (ans) => {\n\t\tsetAnswerArr((prevArr) => [...prevArr, ans]);\n\n\t\tif (index === 10) {\n\t\t\tans === 1 ? setIndex(11) : setIndex(12);\n\t\t} else if (index === 11) {\n\t\t\tsetIndex(13);\n\t\t} else {\n\t\t\tif (index === maxCount) {\n\t\t\t\trouter.push(\"/loading\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetIndex(index + 1);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (answerArr.length === maxCount) {\n\t\t\t//console.log(\"AnswerArr is: \" + answerArr);\n\t\t\tdispatch({ type: CLEAR_URLS });\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_ANSWER,\n\t\t\t\tdata: answerArr,\n\t\t\t});\n\t\t}\n\t});\n\n\treturn (\n\t\t<Container>\n\t\t\t<Col {...containerCol}>\n\t\t\t\t<Question index={index} handler={handler} />\n\t\t\t\t<ProgressBar i={list.arr[index - 1].progress} length={12} />\n\t\t\t</Col>\n\t\t</Container>\n\t);\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}