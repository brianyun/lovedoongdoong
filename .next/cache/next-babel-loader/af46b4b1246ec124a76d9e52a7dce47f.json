{"ast":null,"code":"var _jsxFileName = \"/Users/hsyun/programming/web/mini_project/firebase-MBTI/pages/test2.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport Slider from \"react-slick\";\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport Question2 from \"../components/Question2\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\n\nconst Test = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const maxCount = list.arr.length;\n  const {\n    0: answerArr,\n    1: setAnswerArr\n  } = useState([]);\n  const indexArr = [1, 2, 3, 4, 5, 6, 7];\n  const slickRef = useRef(); // const handler = (ans) => {\n  // \tconsole.log(\"pre count = \", count);\n  // \tif (count === maxCount - 1) {\n  // \t\trouter.push(\"/\");\n  // \t\treturn;\n  // \t}\n  // \tslickRef.current.slickNext();\n  // \tsetCount(count + 1);\n  // \tconsole.log(\"post count = \", count);\n  // };\n  // useEffect(() => {\n  // \tif (answerArr.length === maxCount) {\n  // \t\tconsole.log(\"AnswerArr is: \" + answerArr);\n  // \t\tdispatch({\n  // \t\t\ttype: ADD_ANSWER,\n  // \t\t\tdata: answerArr,\n  // \t\t});\n  // \t}\n  // });\n\n  const {\n    0: index,\n    1: setIndex\n  } = useState(1);\n\n  const handler = ans => {\n    setAnswerArr(prevArr => [...prevArr, ans]);\n\n    if (index === maxCount) {\n      router.push(\"/\");\n      return;\n    }\n\n    setIndex(index + 1);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }, __jsx(Question2, {\n    index: index,\n    handler: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/hsyun/programming/web/mini_project/firebase-MBTI/pages/test2.js"],"names":["React","useRef","useEffect","useState","useRouter","useDispatch","Slider","ADD_ANSWER","Question2","ProgressBar","list","Test","router","dispatch","count","setCount","maxCount","arr","length","answerArr","setAnswerArr","indexArr","slickRef","index","setIndex","handler","ans","prevArr","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMa,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAASC,MAA1B;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMkB,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjB;AACA,QAAMC,QAAQ,GAAGrB,MAAM,EAAvB,CATkB,CAWlB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM;AAAA,OAACsB,KAAD;AAAA,OAAQC;AAAR,MAAoBrB,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMsB,OAAO,GAAIC,GAAD,IAAS;AACxBN,IAAAA,YAAY,CAAEO,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAaD,GAAb,CAAd,CAAZ;;AAEA,QAAIH,KAAK,KAAKP,QAAd,EAAwB;AACvBJ,MAAAA,MAAM,CAACgB,IAAP,CAAY,GAAZ;AACA;AACA;;AAEDJ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,GATD;;AAWA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,KAAlB;AAAyB,IAAA,OAAO,EAAEE,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAtBD,CADD;AA8BA,CA7ED;;AA+EA,eAAed,IAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport Slider from \"react-slick\";\n\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport Question2 from \"../components/Question2\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\n\nconst Test = () => {\n\tconst router = useRouter();\n\tconst dispatch = useDispatch();\n\n\tconst [count, setCount] = useState(0);\n\tconst maxCount = list.arr.length;\n\tconst [answerArr, setAnswerArr] = useState([]);\n\n\tconst indexArr = [1, 2, 3, 4, 5, 6, 7];\n\tconst slickRef = useRef();\n\n\t// const handler = (ans) => {\n\t// \tconsole.log(\"pre count = \", count);\n\n\t// \tif (count === maxCount - 1) {\n\t// \t\trouter.push(\"/\");\n\t// \t\treturn;\n\t// \t}\n\n\t// \tslickRef.current.slickNext();\n\t// \tsetCount(count + 1);\n\t// \tconsole.log(\"post count = \", count);\n\t// };\n\n\t// useEffect(() => {\n\t// \tif (answerArr.length === maxCount) {\n\t// \t\tconsole.log(\"AnswerArr is: \" + answerArr);\n\t// \t\tdispatch({\n\t// \t\t\ttype: ADD_ANSWER,\n\t// \t\t\tdata: answerArr,\n\t// \t\t});\n\t// \t}\n\t// });\n\n\tconst [index, setIndex] = useState(1);\n\n\tconst handler = (ans) => {\n\t\tsetAnswerArr((prevArr) => [...prevArr, ans]);\n\n\t\tif (index === maxCount) {\n\t\t\trouter.push(\"/\");\n\t\t\treturn;\n\t\t}\n\n\t\tsetIndex(index + 1);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{/* <Slider\n\t\t\t\tinfinite={false}\n\t\t\t\tswipe={false}\n\t\t\t\tdraggable={false}\n\t\t\t\tstyle={{ marginTop: \"100px\" }}\n\t\t\t\tref={slickRef}\n\t\t\t\tfade={true}\n\t\t\t>\n\t\t\t\t{indexArr.map((ind) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Question2\n\t\t\t\t\t\t\t\tindex={ind}\n\t\t\t\t\t\t\t\thandler={handler}\n\t\t\t\t\t\t\t\tkey={ind}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Slider> */}\n\n\t\t\t<div>\n\t\t\t\t<Question2 index={index} handler={handler} />\n\t\t\t</div>\n\n\t\t\t{/* <ProgressBar i={count} length={maxCount} /> */}\n\t\t</div>\n\t);\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}