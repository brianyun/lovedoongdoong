{"ast":null,"code":"var _jsxFileName = \"/Users/hsyun/code/web/full_project/firebase-MBTI/pages/test.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport { CLEAR_URLS } from \"../reducers/answer\";\nimport Question from \"../components/Question\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\nimport styled from \"styled-components\";\nimport { Container, containerCol } from \"../assets/css/style_global\";\nimport { Col } from \"antd\";\n\nconst Test = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const maxCount = list.arr.length;\n  const {\n    0: answerArr,\n    1: setAnswerArr\n  } = useState([]);\n  const {\n    0: index,\n    1: setIndex\n  } = useState(1);\n\n  const handler = ans => {\n    setAnswerArr(prevArr => [...prevArr, ans]);\n\n    if (index === 10) {\n      ans === 1 ? setIndex(11) : setIndex(12);\n    } else if (index === 11) {\n      setIndex(13);\n    } else {\n      if (index === maxCount) {\n        router.push(\"/loading\");\n        return;\n      }\n\n      setIndex(index + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (answerArr.length === maxCount) {\n      //console.log(\"AnswerArr is: \" + answerArr);\n      dispatch({\n        type: CLEAR_URLS\n      });\n      dispatch({\n        type: ADD_ANSWER,\n        data: answerArr\n      });\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(ContainerExtended, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, __jsx(Col, _extends({}, containerCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), __jsx(Question, {\n    index: index,\n    handler: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }), __jsx(ProgressBar, {\n    i: list.arr[index - 1].progress,\n    length: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }))));\n};\n\nconst ContainerExtended = styled(Container)`\n\twidth: 80%;\n\ttransform: translateX(10%);\n`;\nexport default Test;","map":{"version":3,"sources":["/Users/hsyun/code/web/full_project/firebase-MBTI/pages/test.js"],"names":["React","useEffect","useState","useRouter","useDispatch","ADD_ANSWER","CLEAR_URLS","Question","ProgressBar","list","styled","Container","containerCol","Col","Test","router","dispatch","maxCount","arr","length","answerArr","setAnswerArr","index","setIndex","handler","ans","prevArr","push","type","data","progress","ContainerExtended"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,4BAAxC;AACA,SAASC,GAAT,QAAoB,MAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAMa,QAAQ,GAAGR,IAAI,CAACS,GAAL,CAASC,MAA1B;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACoB,KAAD;AAAA,OAAQC;AAAR,MAAoBrB,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMsB,OAAO,GAAIC,GAAD,IAAS;AACxBJ,IAAAA,YAAY,CAAEK,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAaD,GAAb,CAAd,CAAZ;;AAEA,QAAIH,KAAK,KAAK,EAAd,EAAkB;AACjBG,MAAAA,GAAG,KAAK,CAAR,GAAYF,QAAQ,CAAC,EAAD,CAApB,GAA2BA,QAAQ,CAAC,EAAD,CAAnC;AACA,KAFD,MAEO,IAAID,KAAK,KAAK,EAAd,EAAkB;AACxBC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,KAFM,MAEA;AACN,UAAID,KAAK,KAAKL,QAAd,EAAwB;AACvBF,QAAAA,MAAM,CAACY,IAAP,CAAY,UAAZ;AACA;AACA;;AACDJ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA;AACD,GAdD;;AAgBArB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAImB,SAAS,CAACD,MAAV,KAAqBF,QAAzB,EAAmC;AAClC;AACAD,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAEtB;AAAR,OAAD,CAAR;AACAU,MAAAA,QAAQ,CAAC;AACRY,QAAAA,IAAI,EAAEvB,UADE;AAERwB,QAAAA,IAAI,EAAET;AAFE,OAAD,CAAR;AAIA;AACD,GATQ,CAAT;AAWA,SACC,4BACC,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,GAAD,eAASR,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACC,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEU,KAAjB;AAAwB,IAAA,OAAO,EAAEE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,WAAD;AAAa,IAAA,CAAC,EAAEf,IAAI,CAACS,GAAL,CAASI,KAAK,GAAG,CAAjB,EAAoBQ,QAApC;AAA8C,IAAA,MAAM,EAAE,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,CADD,CADD;AAUA,CA7CD;;AA+CA,MAAMC,iBAAiB,GAAGrB,MAAM,CAACC,SAAD,CAAY;;;CAA5C;AAKA,eAAeG,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport { CLEAR_URLS } from \"../reducers/answer\";\nimport Question from \"../components/Question\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\nimport styled from \"styled-components\";\n\nimport { Container, containerCol } from \"../assets/css/style_global\";\nimport { Col } from \"antd\";\n\nconst Test = () => {\n\tconst router = useRouter();\n\tconst dispatch = useDispatch();\n\n\tconst maxCount = list.arr.length;\n\tconst [answerArr, setAnswerArr] = useState([]);\n\tconst [index, setIndex] = useState(1);\n\n\tconst handler = (ans) => {\n\t\tsetAnswerArr((prevArr) => [...prevArr, ans]);\n\n\t\tif (index === 10) {\n\t\t\tans === 1 ? setIndex(11) : setIndex(12);\n\t\t} else if (index === 11) {\n\t\t\tsetIndex(13);\n\t\t} else {\n\t\t\tif (index === maxCount) {\n\t\t\t\trouter.push(\"/loading\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetIndex(index + 1);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (answerArr.length === maxCount) {\n\t\t\t//console.log(\"AnswerArr is: \" + answerArr);\n\t\t\tdispatch({ type: CLEAR_URLS });\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_ANSWER,\n\t\t\t\tdata: answerArr,\n\t\t\t});\n\t\t}\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<ContainerExtended>\n\t\t\t\t<Col {...containerCol}>\n\t\t\t\t\t<Question index={index} handler={handler} />\n\t\t\t\t\t<ProgressBar i={list.arr[index - 1].progress} length={12} />\n\t\t\t\t</Col>\n\t\t\t</ContainerExtended>\n\t\t</>\n\t);\n};\n\nconst ContainerExtended = styled(Container)`\n\twidth: 80%;\n\ttransform: translateX(10%);\n`;\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}